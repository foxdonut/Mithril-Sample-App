diff --git a/.gitignore b/.gitignore
index 3065526..12f7ec5 100644
--- a/.gitignore
+++ b/.gitignore
@@ -294,3 +294,4 @@ GitHub.sublime-settings
 /src/services/auth0-variables.js
 /.firebaserc
 /firebase.json
+dist
diff --git a/index.html b/index.html
index e18eb0e..d9c1560 100644
--- a/index.html
+++ b/index.html
@@ -5,12 +5,13 @@
     <meta charset="UTF-8">
     <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
     <script defer src="https://use.fontawesome.com/releases/v5.0.8/js/all.js"></script>
+    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/simple-line-icons/2.4.1/css/simple-line-icons.css">
     <title>Conference Tracker</title>
 </head>
 
 <body>
     <div id="app"></div>
-    <script src="/bundle.js"></script>
+    <script src="/dist/bundle.js"></script>
 </body>
 
-</html>
\ No newline at end of file
+</html>
diff --git a/src/components/cards/CFPCard.jsx b/src/components/cards/CFPCard.jsx
index 53d3eb7..eccd4f6 100644
--- a/src/components/cards/CFPCard.jsx
+++ b/src/components/cards/CFPCard.jsx
@@ -1,24 +1,33 @@
 // CFPCard.jsx
 
-const m = require("mithril");
+import m from "mithril";
+import O from "patchinko/constant";
 
 import ConferenceField from './ConferenceField.jsx';
 import CountDownField from "./CountDownField.jsx";
 
-const CFPCard = {
-  view: ({ attrs }) =>
-    <div class="conference-card">
-      <div class="conference-fields">
-        <ConferenceField fieldValue={`${attrs.conference.name} @ ${attrs.conference.location}`} />
-        <ConferenceField fieldValue={
-          <i class="fas fa-check-circle" />
-        } />
-      </div>
-      <div class="conference-fields">
-        <ConferenceField fieldValue={attrs.conference.CFPDate} />
-        <CountDownField fieldValue={attrs.conference.CFPDate} />
+const createCFPCard = update => {
+  const toggleFavorite = idx => evt => update({
+    conferences: O({ [idx]: O({ favorite: O(x => !x) }) })
+  });
+  return {
+    view: ({ attrs: { conference, idx } }) => {
+      const fav = <span onclick={toggleFavorite(idx)}>
+        <i class={(conference.favorite ? 'icon-star' : 'icon-plus')} />
+      </span>
+
+      return <div class="conference-card">
+        <div class="conference-fields">
+          <ConferenceField fieldValue={`${conference.name} @ ${conference.location}`} />
+          <ConferenceField fieldValue={fav} />
+        </div>
+        <div class="conference-fields">
+          <ConferenceField fieldValue={conference.CFPDate} />
+          <CountDownField fieldValue={conference.CFPDate} />
+        </div>
       </div>
-    </div>
+    }
+  };
 };
 
-export default CFPCard;
\ No newline at end of file
+export default createCFPCard;
diff --git a/src/components/cards/ConferenceCard.jsx b/src/components/cards/ConferenceCard.jsx
index bf7a4d6..3d1c1f7 100644
--- a/src/components/cards/ConferenceCard.jsx
+++ b/src/components/cards/ConferenceCard.jsx
@@ -1,24 +1,33 @@
 // ConferenceCard.jsx
 
-const m = require("mithril");
+import m from "mithril";
+import O from "patchinko/constant";
 
 import ConferenceField from './ConferenceField.jsx';
 import CountDownField from "./CountDownField.jsx";
 
-const ConferenceCard = {
-	view: ({ attrs }) =>
-		<div class="conference-card">
-			<div class="conference-fields">
-				<ConferenceField fieldValue={`${attrs.conference.name} @ ${attrs.conference.location}`} />
-				<ConferenceField fieldValue={
-					<i class="fas fa-star" />
-				} />
-			</div>
-			<div class="conference-fields">
-				<ConferenceField fieldValue={attrs.conference.date} />
-				<CountDownField fieldValue={attrs.conference.date} />
-			</div>
-		</div>
+const createConferenceCard = update => {
+  const toggleFavorite = idx => evt => update({
+    conferences: O({ [idx]: O({ favorite: O(x => !x) }) })
+  });
+  return {
+    view: ({ attrs: { conference, idx } }) => {
+      const fav = <span onclick={toggleFavorite(idx)}>
+        <i class={(conference.favorite ? 'icon-star' : 'icon-plus')} />
+      </span>
+
+      return <div class="conference-card">
+        <div class="conference-fields">
+          <ConferenceField fieldValue={`${conference.name} @ ${conference.location}`} />
+          <ConferenceField fieldValue={fav} />
+        </div>
+        <div class="conference-fields">
+          <ConferenceField fieldValue={conference.date} />
+          <CountDownField fieldValue={conference.date} />
+        </div>
+      </div>
+    }
+  };
 };
 
-export default ConferenceCard;
\ No newline at end of file
+export default createConferenceCard;
diff --git a/src/components/layout/App.jsx b/src/components/layout/App.jsx
index 6c208ca..40ded78 100644
--- a/src/components/layout/App.jsx
+++ b/src/components/layout/App.jsx
@@ -1,14 +1,14 @@
 // App.jsx
 
-const m = require('mithril');
+import m from 'mithril';
 
 import NavBar from './NavBar.jsx';
 
 // Components
 import StageBanner from '../../components/ui/StageBanner.jsx';
 import CardContainer from '../../components/layout/CardContainer.jsx';
-import ConferenceCard from '../../components/cards/ConferenceCard.jsx';
-import CFPCard from '../../components/cards/CFPCard.jsx';
+import createConferenceCard from '../../components/cards/ConferenceCard.jsx';
+import createCFPCard from '../../components/cards/CFPCard.jsx';
 import createEntryForm from '../../components/EntryForm.jsx';
 
 // Mock data
@@ -17,13 +17,14 @@ import { CONFERENCES } from '../../store/data';
 import { createNavigator } from "../../services/navigator"
 
 const createConferenceView = (navigator, update) => {
+  const ConferenceCard = createConferenceCard(update);
   return {
     view: ({attrs:{model}}) => [
 	    <StageBanner action={() => console.log(`Logging out!`)} title="Conferences" />,
 	    <CardContainer>
 		    {
 			    model.conferences
-				    .map(conference => <ConferenceCard conference={conference} />)
+				    .map((conference, idx) => <ConferenceCard conference={conference} idx={idx} />)
 		    }
 	    </CardContainer>
     ]
@@ -31,14 +32,15 @@ const createConferenceView = (navigator, update) => {
 };
 
 const createCFPView = (navigator, update) => {
+  const CFPCard = createCFPCard(update);
   return {
     view: ({attrs:{model}}) => [
 	    <StageBanner action={() => console.log(`Logging out!`)} title="Call for Papers" />,
 	    <CardContainer>
 		    {
 			    model.conferences
-				    .filter(conference => conference.CFP)
-				    .map(conferenceWithCFP => <CFPCard cfp={true} conference={conferenceWithCFP} />)
+				    .map((conference, idx) => conference.CFP && <CFPCard cfp={true} conference={conference} idx={idx} />)
+            .filter(x => x)
 		    }
 	    </CardContainer>
     ]
